{*--------------------------------------------------------------------------*}
{*                            T Y P E S . I N C                             *}
{*--------------------------------------------------------------------------*}
{*                                                                          *}
{* Purposes   : Common data types and color map  for the game core engine   *}
{* Prequisites: None                                                        *}
{*                                                                          *}
{*--------------------------------------------------------------------------*}
{* Origin     : Jani Nyk„nen, 2019                                          *}
{* Conversion : Trinh D.D. Nguyen, 2021                                     *}
{*--------------------------------------------------------------------------*}

{$ifndef __CORE_TYPES__}
{$define __CORE_TYPES__}

{*--------------------------- I N T E R F A C E ----------------------------*}

type    uint8	= byte;		{ 8-bit unsigned integer              }
	int8	= shortint;	{ 8-bit signed integer                }
        uint16	= word;		{ 16-bit unsigned integer             }
{$ifdef VER70}			{ 16-bit signed integer is called     }
        int16	= integer;	{ 'Integer' data type in Turbo Pascal }
{$else}
	int16	= smallint;	{ 'SmallInt' in TMT Pascal            }
{$endif}

	{ for fast indexing of pointer offsets }
	int16_array = array[0..31999] of int16;
	pint16	= ^int16_array;

type	RECT = record
        	x, y,
                w, h	: int16;
	end;

        VEC2 = record
        	x, y	: int16;
        end;

        BYTE2 = record
        	x, y	: uint8;
        end;

	SCENE = ^SCENE_TYPE;
	SCENE_TYPE = record
                init	: function: boolean;
                update	: procedure(v: int16);
                draw	: procedure;
                dispose	: procedure;
                change	: procedure(p: pointer);
                name	: string[16];
	end;

const   FIXED_PREC	= 128;

	{ original game 8-bit color palette was converted to 6-bit values }
	GAME_CMAP: array[0..256*3-1] of uint8 = (
	   0,   0,   0,   0,   0,  21,   0,   0, 	{   0 }
	  42,   0,   0,  63,   0,   9,   0,   0, 	{   8 }
	   9,  21,   0,   9,  42,   0,   9,  63, 	{  16 }
	   0,  18,   0,   0,  18,  21,   0,  18, 	{  24 }
	  42,   0,  18,  63,   0,  27,   0,   0, 	{  32 }
	  27,  21,   0,  27,  42,   0,  27,  63, 	{  40 }
	   0,  36,   0,   0,  36,  21,   0,  36, 	{  48 }
	  42,   0,  36,  63,   0,  45,   0,   0, 	{  56 }
	  45,  21,   0,  45,  42,   0,  45,  63, 	{  64 }
	   0,  54,   0,   0,  54,  21,   0,  54, 	{  72 }
	  42,   0,  54,  63,   0,  63,   0,   0, 	{  80 }
	  63,  21,   0,  63,  42,   0,  63,  63, 	{  88 }
	   9,   0,   0,   9,   0,  21,   9,   0, 	{  96 }
	  42,   9,   0,  63,   9,   9,   0,   9, 	{ 104 }
	   9,  21,   9,   9,  42,   9,   9,  63, 	{ 112 }
	   9,  18,   0,   9,  18,  21,   9,  18, 	{ 120 }
	  42,   9,  18,  63,   9,  27,   0,   9, 	{ 128 }
	  27,  21,   9,  27,  42,   9,  27,  63, 	{ 136 }
	   9,  36,   0,   9,  36,  21,   9,  36, 	{ 144 }
	  42,   9,  36,  63,   9,  45,   0,   9, 	{ 152 }
	  45,  21,   9,  45,  42,   9,  45,  63, 	{ 160 }
	   9,  54,   0,   9,  54,  21,   9,  54, 	{ 168 }
	  42,   9,  54,  63,   9,  63,   0,   9, 	{ 176 }
	  63,  21,   9,  63,  42,   9,  63,  63, 	{ 184 }
	  18,   0,   0,  18,   0,  21,  18,   0, 	{ 192 }
	  42,  18,   0,  63,  18,   9,   0,  18, 	{ 200 }
	   9,  21,  18,   9,  42,  18,   9,  63, 	{ 208 }
	  18,  18,   0,  18,  18,  21,  18,  18, 	{ 216 }
	  42,  18,  18,  63,  18,  27,   0,  18, 	{ 224 }
	  27,  21,  18,  27,  42,  18,  27,  63, 	{ 232 }
	  18,  36,   0,  18,  36,  21,  18,  36, 	{ 240 }
	  42,  18,  36,  63,  18,  45,   0,  18, 	{ 248 }
	  45,  21,  18,  45,  42,  18,  45,  63, 	{ 256 }
	  18,  54,   0,  18,  54,  21,  18,  54, 	{ 264 }
	  42,  18,  54,  63,  18,  63,   0,  18, 	{ 272 }
	  63,  21,  18,  63,  42,  18,  63,  63, 	{ 280 }
	  27,   0,   0,  27,   0,  21,  27,   0, 	{ 288 }
	  42,  27,   0,  63,  27,   9,   0,  27, 	{ 296 }
	   9,  21,  27,   9,  42,  27,   9,  63, 	{ 304 }
	  27,  18,   0,  27,  18,  21,  27,  18, 	{ 312 }
	  42,  27,  18,  63,  27,  27,   0,  27, 	{ 320 }
	  27,  21,  27,  27,  42,  27,  27,  63, 	{ 328 }
	  27,  36,   0,  27,  36,  21,  27,  36, 	{ 336 }
	  42,  27,  36,  63,  27,  45,   0,  27, 	{ 344 }
	  45,  21,  27,  45,  42,  27,  45,  63, 	{ 352 }
	  27,  54,   0,  27,  54,  21,  27,  54, 	{ 360 }
	  42,  27,  54,  63,  27,  63,   0,  27, 	{ 368 }
	  63,  21,  27,  63,  42,  27,  63,  63, 	{ 376 }
	  36,   0,   0,  36,   0,  21,  36,   0, 	{ 384 }
	  42,  36,   0,  63,  36,   9,   0,  36, 	{ 392 }
	   9,  21,  36,   9,  42,  36,   9,  63, 	{ 400 }
	  36,  18,   0,  36,  18,  21,  36,  18, 	{ 408 }
	  42,  36,  18,  63,  36,  27,   0,  36, 	{ 416 }
	  27,  21,  36,  27,  42,  36,  27,  63, 	{ 424 }
	  36,  36,   0,  36,  36,  21,  36,  36, 	{ 432 }
	  42,  36,  36,  63,  36,  45,   0,  36, 	{ 440 }
	  45,  21,  36,  45,  42,  36,  45,  63, 	{ 448 }
	  36,  54,   0,  36,  54,  21,  36,  54, 	{ 456 }
	  42,  36,  54,  63,  36,  63,   0,  36, 	{ 464 }
	  63,  21,  36,  63,  42,  36,  63,  63, 	{ 472 }
	  45,   0,   0,  45,   0,  21,  45,   0, 	{ 480 }
	  42,  45,   0,  63,  45,   9,   0,  45, 	{ 488 }
	   9,  21,  45,   9,  42,  45,   9,  63, 	{ 496 }
	  45,  18,   0,  45,  18,  21,  45,  18, 	{ 504 }
	  42,  45,  18,  63,  45,  27,   0,  45, 	{ 512 }
	  27,  21,  45,  27,  42,  45,  27,  63, 	{ 520 }
	  45,  36,   0,  45,  36,  21,  45,  36, 	{ 528 }
	  42,  45,  36,  63,  45,  45,   0,  45, 	{ 536 }
	  45,  21,  45,  45,  42,  45,  45,  63, 	{ 544 }
	  45,  54,   0,  45,  54,  21,  45,  54, 	{ 552 }
	  42,  45,  54,  63,  45,  63,   0,  45, 	{ 560 }
	  63,  21,  45,  63,  42,  45,  63,  63, 	{ 568 }
	  54,   0,   0,  54,   0,  21,  54,   0, 	{ 576 }
	  42,  54,   0,  63,  54,   9,   0,  54, 	{ 584 }
	   9,  21,  54,   9,  42,  54,   9,  63, 	{ 592 }
	  54,  18,   0,  54,  18,  21,  54,  18, 	{ 600 }
	  42,  54,  18,  63,  54,  27,   0,  54, 	{ 608 }
	  27,  21,  54,  27,  42,  54,  27,  63, 	{ 616 }
	  54,  36,   0,  54,  36,  21,  54,  36, 	{ 624 }
	  42,  54,  36,  63,  54,  45,   0,  54, 	{ 632 }
	  45,  21,  54,  45,  42,  54,  45,  63, 	{ 640 }
	  54,  54,   0,  54,  54,  21,  54,  54, 	{ 648 }
	  42,  54,  54,  63,  54,  63,   0,  54, 	{ 656 }
	  63,  21,  54,  63,  42,  54,  63,  63, 	{ 664 }
	  63,   0,   0,  63,   0,  21,  63,   0, 	{ 672 }
	  42,  63,   0,  63,  63,   9,   0,  63, 	{ 680 }
	   9,  21,  63,   9,  42,  63,   9,  63, 	{ 688 }
	  63,  18,   0,  63,  18,  21,  63,  18, 	{ 696 }
	  42,  63,  18,  63,  63,  27,   0,  63, 	{ 704 }
	  27,  21,  63,  27,  42,  63,  27,  63, 	{ 712 }
	  63,  36,   0,  63,  36,  21,  63,  36, 	{ 720 }
	  42,  63,  36,  63,  63,  45,   0,  63, 	{ 728 }
	  45,  21,  63,  45,  42,  63,  45,  63, 	{ 736 }
	  63,  54,   0,  63,  54,  21,  63,  54, 	{ 744 }
	  42,  63,  54,  63,  63,  63,   0,  63, 	{ 752 }
	  63,  21,  63,  63,  42,  63,  63,  63		{ 760 }
	);

{$endif}
